https://svrtechnologies.com/top-54-python-interview-questions-and-answers-for-experienced/

click below link for some more questions
https://svrtechnologies.com/python-interview-questions/


Python Interview Questions And Answers For Experienced
1. What is namespace in Python?
Answer:  This space is known as a namespace. It is an address location where a variable name is mapped to the object placed. Whenever the variable is searched out, this address location will be searched, to get the corresponding object.

2. How do you make 3D plots/visualizations using NumPy/SciPy?
Answer: Like 2D plotting, 3D graphics is beyond the scope of NumPy and SciPy, but just as in the 2D case, packages exist that integrate with NumPy. Matplotlib provides basic 3D plotting in the mplot3d subpackage, whereas Mayavi provides a wide range of high-quality 3D visualization features, utilizing the powerful VTK engine.

3. Differentiate between .py and .pyc files?
Answer: Both .py and .pyc files hold the byte code. “.pyc” is a compiled version of Python file. This file is automatically generated by Python to improve performance. The .pyc file is having byte code which is platform independent and can be executed on any operating system that supports .pyc format.
Note: there is no difference in speed when the program is read from .pyc or .py file; the only difference is the load time.

4. What are Python’s dictionaries?
Answer: Python’s dictionaries are kind of hash table type. They work like associative arrays or hashes found in Perl and consist of key-value pairs. A dictionary key can be almost any Python type but are usually numbers or strings. Values, on the other hand, can be any arbitrary Python object.

5. How do I send mail from a Python script?
Answer: Use the standard library module smtplib. Here’s a very simple interactive mail sender that uses it. This method will work on any host that supports an SMTP listener.
import sys, smtplib
fromaddr = raw_input(“From: “)
toaddrs = raw_input(“To: “).split(‘,’)
print “Enter message, end with ^D:”
msg = ”
while 1:
line = sys.stdin.readline()
if not line:
break
msg = msg + line
# The actual mail sends
server = smtplib.SMTP(‘localhost’)
server.sendmail(fromaddr, toaddrs, msg)
server.quit()
A UNIX-only alternative uses to send mail. The location of the send mail program varies between systems; sometimes it is /usr/lib/sendmail, sometime /usr/sbin/sendmail. The send mail manual page will help you out. Here’s some sample code:
SENDMAIL = “/usr/sbin/sendmail” # sendmail location
import os
p = os.popen(“%s -t -i” % SENDMAIL, “w”)
p.write(“To: receiver@example.comn“)
p.write(“Subject: testn”)
p.write(“n”) # blank line separating headers from body
p.write(“Some textn”)
p.write(“some more textn”)
sts = p.close()
if sts != 0:
print “Sendmail exit status”, sts

6. Why is that none of my threads are not running? How can I make it work?
Answer: As soon as the main thread exits, all threads are killed. Your main thread is running too quickly, giving the threads no time to do any work.
A simple fix is to add a sleep to the end of the program that’s long enough for all the threads to finish:
import threading, time
def thread_task(name, n):
for I in range(n): print name, i
for I in range(10)

7. Explain about ODBC and Python?
Answer: ODBC (“Open Database Connectivity) API standard allows the connections with any database that supports the interface, such as PostgreSQL database or Microsoft Access in a transparent manner. There are 3 ODBC modules for Python: PythonWin ODBC module – limited development
mxODBC – commercial product
pyodbc – it is an open source Python package.

8. Explain Python’s pass by references Vs pass by value. (or) Explain about Python’s parameter passing mechanism?
Answer: In Python, by default, all the parameters (arguments) are passed “by reference” to the functions. Thus, if you change the value of the parameter within a function, the change is reflected in the calling function. We can even observe the pass “by value” kind of behavior whenever we pass the arguments to functions that are of type say numbers, strings, tuples. This is because of the immutable nature of them.

9. What is a module and package in Python?
Answer: The module is the way to structure a program. Each Python program file is a module, which imports other modules like objects and attributes.

The folder of the Python program is a package of modules. A package can have modules or subfolders.

10. How does exception handling in Python differ from Java?
Answer: 



12. What is a Tuple?
Answer:

1. Tuple Objects can be created by using parenthesis or by calling tuple function or by assigning multiple values to a single variable
2. Tuple objects are immutable objects
3. Insertion  order is preserved
4. Duplicate elements are allowed
5. Heterogeneous elements are allowed
6. Tuple supports both positive and negative indexing
7. The elements of the tuple can be mutable or immutable
Example:
x=()
print(x)
print(type(x))
print(len(x))
y-tuple()
print(y)
print(type(y))
print(len(y))
z=10,20
print(z)
print(type(z))
print(len(z))
p=(10,20,30,40,50,10,20,10) Insertion & duplicate
print(p)
q=(100, 123.123, True, “mindmajix”) Heterogeneous
print(q).

13. How can you Get the Google cache age of any URL or web page?
Answer:

Use the following URL format:

Be sure to replace “URLGOESHERE” with the proper web address of the page or site whose cache you want to retrieve and see the time for.

14. What is map function in Python?
Answer: map function executes the function given as the first argument on all the elements of the iterable given as the second argument. If the function given takes in more than 1 arguments, then many iterables are given.

15. What is Anonymous Function or Lambda Function?

Answer:
A function which doesn’t contain any name is known as an anonymous function lambda function
Syntax:
lambda arguments: expression
Lambda function we can assign to the variable & we can call the lambda function through the variable
Example:

myfunction=lambda x:x*x
a=myfunction(10)
print(a)
Output: 100

16. Modules Search Path??
Answer: By default python interpreter search for the imported modules in the following locations:
Current directory (main module location)
Environment variable path
Installation dependent directory
If the imported module is not found in any one of the above locations. Then python interpreter gives an error.
Built-in attributes of a module:
By default for each and every python module some properties are added internally and we call those properties as a built-in-attribute of a module.


Write a program to check whether the object is of a class or its subclass.
There is a method which is built-in to show the instances of an object that consists of many classes by providing a tuple in a table instead of individual classes. The method is given as isinstance(obj,cls) and in more details given as:

isinstance(obj, (class1, class2, …)) that is used to check about the object’s presence in one of the classes. The built in types can also have many formats of the same function like isinstance(obj, str) or isinstance(obj, (int, long, float, complex)).

It is not preferred to use the class instead of user-defined classes are made that allow easy object-oriented style to define the behavior of the object’s class. These perform a different thing that is based on the class. The function differs from one class to another class.
To find out the object of the particular class the following program is used:
def search(obj):
if isinstance(obj, box):
# This is the code that is given for the box and writes the program in the object
elif isinstance(obj, Document):
# This is the code that searches the document and writes the values in it
elif
obj.search()
#This is the function used to search the object’s class.

18. What is the function of “self”?
Answer: “Self” is a variable that represents the instance of the object to itself. In most of the object-oriented programming language, this is passed as to the methods as a hidden parameter that is defined by an object. But, in python, it is declared it and pass it explicitly. It is the first argument that gets created in the instance of class A and the parameters to the methods are passed automatically. It refers to a separate instance of the variable for individual objects. This is the first argument that is used in the class instance and the “self” method is defined explicitly to all the methods that are used and present. The variables are referred to as “self.xxx”.



20. What are the Packages??
Answer: The package is nothing but a folder or dictionary which represents a collection of modules
A package can also contain sub packages


21. What is File Handling?
Answer: The file is a named location on the disk, which stores the data in a permanent manner.
Mode of the file indicates for what purpose the file is going to be opened(r,w, a,b)

22. When would you use a break statement in a for loop?
Answer: The break statement terminate the loop.

23. How To Save An Image Locally Using Python Whose URL Address I Already Know?
Answer: We will use the following code to save an image locally from an URL address

1.import urllib.request
2.urllib.request.urlretrieve(“URL”, “local-filename.jpg”)

24. What is the process to run sub-process with pipes that connect both input and output?
Answer: The popen2() module is used to run the sub-process but due to some difficulty in processing like the creation of deadlock that keeps a process blocked that wait for the output from the child and child is waiting for the input. The deadlock occurs due to the fact that parent and child don’t have the synchronization and both are waiting to get the processor to provide the resources to one another. Use of popen3() method allows the reading of stdout and stderr to take place where the internal buffer increases and there is no read() takes place to share the resources. popen2() take care of the deadlock by providing the methods like wait() and waitpid() that finishes a process first and when a request comes it hands over the responsibility to the process that is waiting for the resources.
The program is used to show the process and run it.
import popen2
fromchild, tochild = popen2.popen2(“command”)
tochild.write(“inputn”)
tochild.flush()
output = fromchild.readline()

25. What are the different ways to generate random numbers?
Answer: The random module is the standard module that is used to generate a random number.
The method is defined as:
import random
 .random()
The statement random.random() method return the floating point number that is in the range of [0, 1). The function generates random float numbers. The methods that are used with the random class are the bound methods of the hidden instances. The instances of the Random can be done to show the multi-threading programs that create a different instance of individual threads. The other random generators that are used in this are:
– randrange(a, b): it chooses an integer and defines the range in-between [a, b). It returns the elements by selecting them randomly from the range that is specified. It doesn’t build a range object.
– uniform(a, b): it chooses a floating point number that is defined in the range of [a,b).Iyt returns the floating point number
– normalvariate(mean, sdev): it is used for the normal distribution where the mu is a mean and the sdev is a sigma that is used for standard deviation.
– The Random class that is used and instantiated creates an independent multiple random number generators.
Write a program to show the singleton pattern used in python.
Singleton patter is used to provide a mechanism that limits the number of instances that can be used by one class. It also allows the same object to be shared between many different parts of the code. This allows the global variables to be used as the actual data that is used is hidden by the singleton class interface. The singleton class interface can have only one public member and one class method Handle. Private constructors are not used to creating an object that is used outside the class. The process waits for the static member function to create new instances and return the singleton object.

26. What Are The Built-In Types Available In Python?
Answer:

Here is the list of most commonly used built-in types that Python supports:
MILDS INSTRU

Immutable built-in types of Python
Numbers
Strings
Tuples
Mutable built-in types of Python
List
Dictionaries
Sets
27. Which methods of Python are used to determine the type of instance and inheritance?
Answer:

Python has 2 built-in functions that work with inheritance:
isinstance() – this method checks the type of instance.

for eg, isinstance(myObj, int) – returns True only when “myObj. class ” is “int”.
issubclass() – this method checks class inheritance

for eg: issubclass(bool, int) – returns True because “bool” is a subclass of “int”.

issubclass(unicode, str) – returns False because “unicode” is not a subclass of “str”.

28. What is the use of enumerate() in Python?
Answer: Using enumerate() function you can iterate through the sequence and retrieve the index position and its corresponding value at the same time.
>>> for i,v in enumerate([‘Python’,’Java’,’C++’]):
print(i,v)
0 Python
1 Java
2 C++

29. How many kinds of sequences are supported by Python? What are they?
Answer: Python supports 7 sequence types. They are str, list, tuple, unicode, bytearray, xrange, and buffer. where xrange is deprecated in python 3.5.X.

30. Name a few methods for matching and searching the occurrences of a pattern in a given text String?
Answer: There are 4 different methods in the “re” module to perform pattern matching. They are:

match() – matches the pattern only to the beginning of the String. search() – scan the string and look for a location the pattern matches findall() – finds all the occurrences of the match and return them as a list
finder() – finds all the occurrences of match and return them as an iterator.

31. Explain how Python does Compile-time and Run-time code checking?
Answer: Python performs some amount of compile-time checking, but most of the checks such as type, name, etc are postponed until code execution. Consequently, if the Python code references a user -a defined function that does not exist, the code will compile successfully. In fact, the code will fail with an exception only when the code execution path references the function which does not exist.

32. What is Abnormal Termination?
Answer: The concept of terminating the program in the middle of its execution without executing the last statement of the main module is known as an abnormal termination
Abnormal termination is an undesirable situation in programming languages.

33. What is Try Block?
Answer: A block which is preceded by the try keyword is known as a try block
Syntax:

try{//statements that may cause an exception}
The statements which cause to run time errors and other statements which depends on the execution of run time errors statements are recommended to represent in a try block
While executing try block statement if any exception is raised then immediately try block identifies that exception, receive that exception and forward that exception to except block without executing remaining statements to try block.

34. What is scheduling?
Answer: Among multiple threads which thread as to start the execution first, how much time the thread as to execute after allocated time is over, which thread, as to continue the execution next this, comes under scheduling
Scheduling is highly dynamic.

35. What is Threads Life Cycle?
Answer: Threads Life Cycle
Creating the object of a class which is overwriting run method of thread class is known as a creating thread
Whenever a thread is created then we call thread is in new state or birth state thread.
Whenever we call the start method on the new state threads then those threads will be forwarded for scheduling
The threads which are forwarded for scheduling are known as ready state threads
Whenever scheduling time occurs, ready state thread starts execution
The threads which are executing are known as running state threads
Whenever sleep fun or join methods are called on the running state threads then immediately those threads will wait.
The threads which are waiting are known as waiting for state threads
Whenever waiting time is over or specified thread execution is over then immediately waiting state threads are forwarded for scheduling.
If running state threads execution is over then immediately those threads execution will be terminated
The threads which execution is terminated are known as dead state threads.

36. What is Web Scraping? How do you achieve it in Python?
Answer: Web Scrapping is a way of extracting the large amounts of information which is available on the web sites and saving it onto the local machine or onto the database tables.
In order to scrap the web: load the web page which is interesting to you. To load the web page, use the “requests” module.
parse HTML from the web page to find interesting information. Python has few modules for scraping the web. They are urllib2, scrapy, pyquery, BeautifulSoap, etc.

37. What are Accessors, mutators, @property?
Answer: Accessors and mutators are often called getters and setters in languages like “Java”. For example, if x is a property of a user-defined class, then the class would have methods called setX() and getX(). Python has an @property “decorator” that allows you to ad getters and setters in order to access the attribute of the class.

38. How To Find Bugs Or Perform Static Analysis In A Python Application?
Answer: You can use PyChecker, which is a static analyzer. It identifies the bugs in Python project and also reveals the style and complexity related bugs.
Another tool is Pylint, which checks whether the Python module satisfies the coding standard.

39. How to retrieve data from a table in MySQL database through Python code?
Answer:

Explain.
import MySQLdb module as import MySQLdb
establishes a connection to the database.
db = MySQLdb.connect(“host”=” localhost”, “database-user”=”user-name”, “password”=” password”, “database-name”=” database”)
initialize the cursor variable upon the established connection: c1 = db.cursor()
retrieve the information by defining a required query string. s = “Select * from dept”
fetch the data using fetch() methods and print it. data = c1.fetch(s)
close the database connection. db.close()
40. What Are Different Methods To Copy An Object In Python?
Answer:

There are two ways to copy objects in Python.

copy.copy() function
It makes a copy of the file from source to destination.
It’ll return a shallow copy of the parameter.
copy.deepcopy() function
It also produces the copy of an object from the source to destination.
It’ll return a deep copy of the parameter that you can pass to the function.

41. When Is The Python Decorator Used?
Answer: Python decorator is a relative change that you do in Python syntax to adjust the functions quickly.

42. What Is The Key Difference Between A List And The Tuple?
Answer:

List Vs Tuple.
The major difference between a list and the tuple is that the list is mutable while tuple is not. A tuple is allowed to be hashed, for example, using it as a key for dictionaries.

43. What Is The Purpose Of Doc Strings In Python?
Answer: In Python, a documentation string is popularly known as docstrings. It sets a process of recording Python functions, modules, and classes.

44. What is Tkinter?
Answer: TkInter is a Python library. It is a toolkit for GUI development. It provides support for various GUI tools or widgets (such as buttons, labels, text boxes, radio buttons, etc) that are used in GUI applications. The common attributes of them include Dimensions, Colors, Fonts, Cursors, Etc.

45. Name and explain the three magic methods of Python that are used in the construction and initialization of custom Objects?
Answer: The 3 magic methods of Python that are used in the construction and initialization of custom Objects are: init__, new, and del__.
new – this method can be considered as a “constructor”. It is invoked to create an instance of a class with the statement said, myObj = MyClass()
init__ — It is an “initializer”/ “constructor” method. It is invoked whenever any arguments are passed at the time of creating an object. myObj = MyClass(‘Pizza’,25)
del- this method is a “destructor” of the class. Whenever an object is deleted,
the invocation of del__ takes place and it defines behavior during the garbage collection. 

Note: new, del are rarely used explicitly.

46. Which Python Function Will You Use To Convert A Number To A String?
Answer: For converting a number into a string, you can use the built-in function <str()>. If you want an octal or hexadecimal representation, use the inbuilt function <oct()> or <hex()>.

47. How Do You Debug A Program In Python? Is It Possible To Step Through Python Code?
Answer: Yes, we can use the Python debugger () to debug any Python program. And if we start a program using, then it let us even step through the code.

48. List Down Some Of The PDB Commands For Debugging Python Programs?
Answer: Here are a few PDB commands to start debugging Python code.

Add breakpoint 
Resume execution 
Step by step debugging 
Move to next line 
List source code 
Print an expression 
49. Why And When Do You Use Generators In Python?
Answer: A generator in Python is a function which returns an iterable object. We can iterate on the generator object using the keyword. But we can only do that once because their values don’t persist in memory, they get the values on the fly.

Generators give us the ability to hold the execution of a function or a step as long as we want to keep it. However, here are a few examples where it is beneficial to use generators.

We can replace loops with generators for efficiently calculating results involving large data sets.
Generators are useful when we don’t want all the results and wish to hold back for some time.
Instead of using a callback function, we can replace it with a generator. We can write a loop inside the function doing the same thing as the callback and turns it into a generator.

50. Explain split(), sub(), sub() methods of “re” module in Python?
Answer: To modify the strings, Python’s “re” module is providing 3 methods. They are:

split() – uses a regex pattern to “split” a given string into a list.
sub() – finds all substrings where the regex pattern matches and then replace them with a different string
subn() – it is similar to sub() and also returns the new string along with the no. of replacements

51. How can you generate random numbers in Python?
Answer: The random module is the standard module that is used to generate a random number. The method is defined as:

1.import random
2.random.random
The statement random.random() method return the floating point number that is in the range of [0, 1). The function generates random float numbers. The methods that are used with the random class are the bound methods of the hidden instances. The instances of the Random can be done to show the multi-threading programs that create a different instance of individual threads. The other random generators that are used in this are:

randrange(a, b): it chooses an integer and defines the range in-between [a, b). It returns the elements by selecting them randomly from the range that is specified. It doesn’t build a range object.
uniform(a, b): it chooses a floating point number that is defined in the range of [a,b).Iyt returns the floating point number
normalvariate(mean, sdev): it is used for the normal distribution where the mu is a mean and the sdev is a sigma that is used for standard deviation.
The Random class that is used and instantiated creates an independent multiple random number generators.

52. What advantages do NumPy arrays offer over (nested) Python lists?
Answer: Python’s lists are efficient general-purpose containers. They support (fairly) efficient insertion, deletion, appending, and concatenation, and Python’s list comprehensions make them easy to construct and manipulate.
They have certain limitations: they don’t support “vectorized” operations like elementwise addition and multiplication, and the fact that they can contain objects of differing types mean that Python must store type information for every element, and must execute type dispatching code when operating on each element.
NumPy is not just more efficient; it is also more convenient. You get a lot of vector and matrix operations for free, which sometimes allow one to avoid unnecessary work. And they are also efficiently implemented.
NumPy array is faster and you get a lot built-in with NumPy, FFTs, convolutions, fast searching, basic statistics, linear algebra, histograms, etc.

53. What does this mean: *args, **kwargs? And why would we use it?
Answer: We use *args when we aren’t sure how many arguments are going to be passed to a function, or if we want to pass a stored list or tuple of arguments to a function. **kwargsis used when we don’t know how many keyword arguments will be passed to a function, or it can be used to pass the values of a dictionary as keyword arguments. The identifiers args and kwargs are a convention, you could also use *bob and *billy but that would not be wise.

54. How Does Python Handle The Memory Management?
Answer: Python uses private heaps to maintain its memory. So the heap holds all the Python objects and the data structures. This area is only accessible to the Python interpreter; programmers can’t use it.
And it’s the Python memory manager that handles the Private heap. It does the required allocation of the heap for Python objects.
Python employs a built-in garbage collector, which salvages all the unused memory and offloads it to the heap space.
****************************************************************************************************************************************************
Interview Questions on Python
1. What is Pass in Python?
Answer: Pass specifies a Python statement without operations. It is a placeholder in a compound statement. If we want to create an empty class or functions, this pass keyword helps to pass the control without error. (interview questions on python)

2. Draw a comparison between the range and xrange in Python?
Answer: In terms of functionality, both range and xrange are identical. Both allow for generating a list of integers. The main difference between the two is that while range returns a Python list object, xrange returns an xrange object.

Xrange is not able to generate a static list at runtime the way range does. On the contrary, it creates values along with the requirements via a special technique called yielding. It is used with a type of object known as generators.

If you have a very enormous range for which you need to generate a list, then xrange is the function to opt for. This is especially relevant for scenarios dealing with a memory-sensitive system, such as a smartphone.

The range is a memory beast. Using it requires much more memory, especially if the requirement is gigantic. Hence, in creating an array of integers to suit the needs, it can result in a Memory Error and ultimately lead to crashing the program.

3. Explain the use of try: except raise, and finally?
Answer: Try, except and finally blocks are used in Python error handling. Code is executed in the try block until an error occurs. One can use a generic except block, which will receive control after all errors, or one can use specific exception handling blocks for various error types. Control is transferred to the appropriate except block. In all cases, the final block is executed. Raise may be used to raise your own exceptions. 

4. How does Lambda function differ from a normal function in Python?
Answer: Lambda is similar to the inline function in C programming. It returns a function object. It contains only one expression and can accept any number of arguments.

In case of a normal function, you can define a function name, pass the parameter and mandatorily have a return statement. The Lambda function can be typically used for simple operations without the use of function names. It can also be used in the place of a variable.

5. What Is A String In Python?
Answer: A string in Python is a sequence of alphanumeric characters. They are immutable objects. It means that they don’t allow modification once they get assigned a value. Python provides several methods, such as join(), replace(), or split() to alter strings. But none of these change the original object.

6. What is the difference between locals() and globals ()?
Answer: locals() is accessed within the function and it returns all names that can be accessed locally from that function.

globals() returns all names that can be accessed globally from that function.

7. How many Keywords are there in Python? And why should we know them?
Answer: There are 33 keywords in Python. We should know them to know about their use so that in our work we can utilize them. Another thing is while naming a variable, the variable name cannot be matched with the keywords. So, we should know about all the keywords.

8. What do you mean by the dictionary in Python?
Answer: The built-in data types of Python known as Dictionary. For e.g. “Country”.

9. Explain Python Functions?
Answer: A function is a section of the program or a block of code that is written once and can be executed whenever required in the program. A function is a block of self-contained statements which has a valid name, parameters list, and body. Functions make programming more functional and modular to perform modular tasks. Python provides several built-in functions to complete tasks and also allows a user to create new functions as well.

10. Does the same Python code work on multiple platforms without any changes?
Answer: Yes. As long as you have the Python environment on your target platform (Linux, Windows, Mac), you can run the same code. 

11. What do you understand by monkey patching in Python?
Answer: The dynamic modifications made to a class or module at runtime are termed as monkey patching in Python. Consider the following code snippet.

12. What Is Python, What Are The Benefits Of Using It, And What Do You Understand Of PEP 8?
Answer:  Python is one of the most successful interpreted languages. When you write a Python script, it doesn’t need to get compiled before execution. Few other interpreted languages are PHP and Javascript.

Benefits Of Python Programming
Python is a dynamic-typed language. It means that you don’t need to mention the data type of variables during their declaration. It allows to set variables like var1=101 and var2 =” You are an engineer.” without any error.
Python supports object-orientated programming as you can define classes along with the composition and inheritance. It doesn’t use access specifiers like public or private).
Functions in Python are like first-class objects. It suggests you can assign them to variables, return from other methods and pass as arguments.
Developing using Python is quick but running it is often slower than compiled languages. Luckily, Python enables to include the “C” language extensions so you can optimize your scripts.
Python has several usages like web-based applications, test automation, data modeling, big data analytics and much more. Alternatively, you can utilize it as a “glue” layer to work with other languages.
PEP 8.
PEP 8 is the latest Python coding standard, a set of coding recommendations. It guides to deliver more readable Python code.

You may erroneously expect list1 to be equal to [10] and list3 to match with [‘a’], thinking that the list argument will initialize to its default value of [] every time there is a call to the extendList.

However, the flow is like that a new list gets created once after the function is defined. And the same get used whenever someone calls the extendList method without a list argument. It works like this because the calculation of expressions (in default arguments) occurs at the time of function definition, not during its invocation.

The list1 and list3 are hence operating on the same default list, whereas list2 is running on a separate object that it has created on its own (bypassing an empty list as the value of the list parameter).

13. What is the use of break statement?
Answer: It is used to terminate the execution of the current loop. A break always breaks the current execution and transfer control outside the current block. If the block is in a loop, it exits from the loop, and if the break is in a nested loop, it exits from the innermost loop. 

14. What is the difference between ‘match’ and ‘search’ in Python?
Answer: Match checks for the match at the beginning of the string whereas search checks for the match anywhere in the string.

15. How to create a Unicode string in Python?
Answer: In Python 3, the old Unicode type has replaced by “str” type, and the string is treated as Unicode by default. We can make a string in Unicode by using art.title.encode(“utf-8”) function.

16. What are the differences between Python 2.x and Python 3.x?
Answer: Python 2.x is an older version of Python while Python 3.x is newer. Python 2.x is legacy now but Python 3.x is the present and future of this language. The most visible difference between them is in print statement. In Python 2 it is print “Hello” and in Python 3, it is print (“Hello”). 

17. What Are Class Or Static Variables In Python Programming?
Answer: In Python, all the objects share common class or static variables.

But the instance or non-static variables are altogether different for different objects.

The programming languages like C++ and Java need to use the static keyword to make a variable as the class variable. However, Python has a unique way to declare a static variable.

All names initialized with a value in the class declaration becomes the class variables. And those which get assigned values in the class methods becomes the instance variables. (E Learning Portal)

18. When would you use triple quotes as a delimiter?
Answer: APEX syntax has different features such as variable declaration to store the different values in the memory. The queries will be like SOQL which will be used to execute the queries, loop statements to perform the iterations in performing the operations, flow control statements can be used to control the flow execution whether to start or stop the execution process, DML statements can be used to manipulate the data by executing the queries. (interview questions on python)

19. What happens in the background when you run a Python file?
Answer: When we run a .py file, it undergoes two phases. In the first phase, it checks the syntax and in the second phase, it compiles to bytecode (.pyc file is generated) using Python virtual machine, loads the bytecode into memory and runs.

20. Explain the difference between local and global namespaces?
Answer:
Local namespaces are created within a function. when that function is called. Global namespaces are created when the program starts.

21. What is Python?
Answer: Python is a high-level, interpreted, interactive and object-oriented scripting language. Python is designed to be highly readable. It uses English keywords frequently whereas other languages use punctuation, and it has fewer syntactical constructions than other languages.

22. How to save an image when you know the URL?
Answer: To save an image locally, you would use this type of a code:
import urllib.request
urllib.request.urlretrieve(“URL”, “image-name.jpg”)

23. What is the Python decorator?
Answer: Python decorator is a concept which allows to call or declare a function inside a function, pass a function as an argument, return a function from the function. The decorator provides extra facility to the function. It also helps to organize a piece of code within a function.

24. What Is A Function In Python Programming?
Answer: A function is an object which represents a block of code and is a reusable entity. It brings modularity to a program and a higher degree of code reusability.

Python has given us many built-in functions such as print() and provides the ability to create user-defined functions. 

25. How do you execute a Python Script?
Answer: From the command line, type python .py or python.y.py where the x.y is the version of the Python interpreter desired.

Learn how to use Python, from beginner basics to advanced techniques, with online video tutorials taught by industry experts. Enroll for Free Python Training Demo!

26. Give a detailed explanation about setting up the database in Django?
Answer: The process of setting up a database is initiated by using the command edit mysite/setting.py. This is a normal Python module with a module-level representation of Django settings. Django relies on SQLite by default, which is easy to be used as it doesn’t require any other installation.

SQLite stores data as a single file in the filesystem. Now, you need to tell Django how to use the database. For this, the project’s setting.py file needs to be used. Following code must be added to the file for making the database workable with the Django project:

27. How does For loop and While loop differ in Python and when do you choose to use them?
Answer: For loop is generally used to iterate through the elements of various collection types such as List, Tuple, Set, and Dictionary.

While loop is the actual looping feature that is used in any other programming language. This is how Python differs in handling loops from the other programming languages.

28. What is Threads Life Cycle?
Answer: Threads Life Cycle
Creating the object of a class which is overwriting run method of thread class is known as a creating thread
Whenever a thread is created then we call thread is in new state or birth state thread.
Whenever we call the start method on the new state threads then those threads will be forwarded for scheduling
The threads which are forwarded for scheduling are known as ready state threads
Whenever scheduling time occurs, ready state thread starts execution
The threads which are executing are known as running state threads
Whenever sleep fun or join methods are called on the running state threads then immediately those threads will wait.
The threads which are waiting are known as waiting state threads
Whenever waiting time is over or specified thread execution is over then immediately waiting state threads are forwarded for scheduling.
If running state threads execution is over then immediately those threads execution will be terminated
The threads which execution is terminated are known as dead state threads.

29. What do you understand by the process of compilation and linking in Python?
Answer: In order to compile new extensions without any error, compiling and linking is used in Python. Linking initiates only and only when the compilation is complete.

In the case of dynamic loading, the process of compilation and linking depends on the style that is provided with the concerned system. In order to provide dynamic loading of the configuration setup files and rebuilding the interpreter, the Python interpreter is used.

30. What is a Python module?
Answer: A module is a Python script that generally contains import statements, functions, classes and variable definitions, and Python runnable code and it “lives” file with a ‘.py’ extension. zip files and DLL files can also be modules. Inside the module, you can refer to the module name as a string that is stored in the global variable name. 

31. Explain List, Tuple, Set, and Dictionary and provide at least one instance where each of these collection types can be used?
Answer: List: Collection of items of different data types which can be changed at run time.
Tuple: Collection of items of different data types which cannot be changed. It only has read-only access to the collection. This can be used when you want to secure your data collection set and does not need any modification.
Set: Collection of items of a similar data type.
Dictionary: Collection of items with key-value pairs.
Generally, List and Dictionary are extensively used by programmers as both of them provide flexibility in data collection.

32. Give an example of shuffle() method?
Answer: This method shuffles the given string or an array. It randomizes the items in the array. This method is present in the random module. So, we need to import it and then we can call the function. It shuffles elements each time when the function calls and produces different output.

33. Does Python allow you to program in a structured style?
Answer: Yes. It does allow to code is a structured as well as Object-oriented style. It offers excellent flexibility to design and implement your application code depending on the requirements of your application.

34. What is a decorator?
Answer: APEX syntax has different features such as variable declaration to store the different values in the memory. The queries will be like SOQL which will be used to execute the queries, loop statements to perform the iterations in performing the operations, flow control statements can be used to control the flow execution whether to start or stop the execution process, DML statements can be used to manipulate the data by executing the queries. 

35. What is Abnormal Termination?
Answer: The concept of terminating the program in the middle of its execution without executing the last statement of the main module is known as an abnormal termination
Abnormal termination is an undesirable situation in programming languages. 

36. How will you distinguish between NumPy and SciPy?
Answer: Typically, NumPy contains nothing but the array data type and the most basic operations, such as basic element-wise functions, indexing, reshaping, and sorting. All the numerical code resides in SciPy.

As one of NumPy’s most important goals is compatibility, the library tries to retain all features supported by either of its predecessors. Hence, NumPy contains a few linear algebra functions despite the fact that these more appropriately belong to the SciPy library.

SciPy contains fully-featured versions of the linear algebra modules available to NumPy in addition to several other numerical algorithms.

37. What happens when a function doesn’t have a return statement? Is this valid?
Answer: Yes, this is valid. The function will then return a None object. The end of a function is defined by the block of code being executed (i.e., the indenting) not by any explicit keyword.

38. Describe how multithreading is achieved in Python?
Answer: Even though Python comes with a multi-threading package, if the motive behind multithreading is to speed the code then using the package is not the go-to option.

The package has something called the GIL or Global Interpreter Lock, which is a construct. It ensures that one and only one of the threads execute at any given time. A thread acquires the GIL and then do some work before passing it to the next thread.

This happens so fast that to a user it seems that threads are executing in parallel. Obviously, this is not the case as they are just taking turns while using the same CPU core. Moreover, GIL passing adds to the overall overhead to the execution.

Hence, if you intend to use the threading package for speeding up the execution, using the package is not recommended.

39. How are data types defined in Python and how much bytes do integer and decimal data types hold?
Answer: In Python, there is no need to define a variable’s data type explicitly.

Based on the value assigned to a variable, Python stores the appropriate data type. In the case of numbers such as Integer, Float, etc, the length of data is unlimited.

40. What is swap case() function in the Python?
Answer: It is a string’s function which converts all uppercase characters into lowercase and vice versa. It is used to alter the existing case of the string. This method creates a copy of the string which contains all the characters in the swap case. If the string is in lowercase, it generates a small case string and vice versa. It automatically ignores all the non-alphabetic characters. 

41. What is Multithreading?
Answer: Thread Is a functionality or logic which can execute simultaneously along with the other part of the program

Thread is a lightweight process
Any program which is under execution is known as process
We can define the threads in python by overwriting run method of the Thread class
Thread class is a predefined class which is defined in the threading module
Thread in the module is a predefined module
If we call the run method directly the logic of the run method will be executed as a normal method logic
In order to execute the logic of the run method as we use the start method of thread class.

42. What Packages in the Standard Library, Useful for Data Science Work, Do You Know?
Answer: When Guido van Rossum created Python in the 1990s, it wasn’t built for data science. Yet, today, Python is the leading language for machine learning, predictive analytics, statistics, and simple data analytics.

This is because Python is a free and open-source language that data professionals could easily use to develop tools that would help them complete data tasks more efficiently.

The following packages in the Python Standard Library are very handy for data science projects:

NumPy

NumPy (or Numerical Python) is one of the principal packages for data science applications. It’s often used to process large multidimensional arrays, extensive collections of high-level mathematical functions, and matrices. Implementation methods also make it easy to conduct multiple operations with these objects.

There have been many improvements made over the last year that have resolved several bugs and compatibility issues. NumPy is popular because it can be used as a highly efficient multi-dimensional container of generic data. It’s also an excellent library as it makes data analysis simple by processing data faster while using a lot less code than lists. 

Pandas

Pandas is a Python library that provides highly flexible and powerful tools and high-level data structures for analysis. Pandas is an excellent tool for data analytics because it can translate highly complex operations with data into just one or two commands.

Pandas comes with a variety of built-in methods for combining, filtering, and grouping data. It also boasts time-series functionality that is closely followed by remarkable speed indicators.

SciPy

SciPy is another outstanding library for scientific computing. It’s based on NumPy and was created to extend its capabilities. Like NumPy, SciPy’s data structure is also a multidimensional array that’s implemented by NumPy.

The SciPy package contains powerful tools that help solve tasks related to integral calculus, linear algebra, probability theory, and much more.

Recently, this Python library went through some major build improvements in the form of continuous integration into multiple operating systems, methods, and new functions. Optimizers were also updated, and several new BLAS and LAPACK functions were wrapped.

43. Describe how to send email from a Python Script?
Answer: The smtplib module is used to defines an SMTP client session object that can be used to send email using Pythons Script. 

44. What happens with the following function definition?
Answer: Here the issue is with function definition, it is a syntax error and the code will not run. The default argument is following the non-default argument, which is not right as per Python function definition rules. Non-default arguments should be placed first and then comes the default arguments in the function definition. Here is the right way of defining:
def welcome(city, name=’guest’): print ‘Hello’, name, ‘Welcome to’, city

The order of passing values to a function is, first one has to pass non-default arguments, default arguments, variable arguments, and keyword arguments.

45. Mention at least 3-4 benefits of using Python over the other scripting languages such as Javascript?
Answer: Enlisted below are some of the benefits of using Python.

Application development is faster and easy.
Extensive support of modules for any kind of application development including data analytics/machine learning/math-intensive applications.
An excellent support community to get your answers.

46. Explain Python is one Line?
Answer: Python is a modern powerful interpreted language with threads, objects, modules, exceptions and also have the property of automatic memory management.

47. Python has something called the dictionary. Explain using an example
Answer: A dictionary in Python programming language is an unordered collection of data values such as a map. Dictionary holds the key: value pair. It helps in defining a one-to-one relationship between keys and values. Indexed by keys, a typical dictionary contains a pair of keys and corresponding values.
*********************************************************************************************************************************************************
Python Programming Interview Questions
01. How is Exception Handling done in Python?
Answer: There are 3 main keywords i.e. try, except and finally which are used to catch exceptions and handle the recovering mechanism accordingly. Try is the block of a code which is monitored for errors. Except block gets executed when an error occurs. (python programming interview questions)

The beauty of the final block is to execute the code after trying for error. This block gets executed irrespective of whether an error occurred or not. Finally block is used to do the required cleanup activities of objects/variables.

02. How will you differentiate between deep copy and shallow copy?
Answer: We use a shallow copy when a new instance type gets created. It keeps the values that are copied in the new instance. Just like it copies the values, the shallow copy also copies the reference pointers.

Reference points copied in the shallow copy reference to the original objects. Any changes made in any member of the class affects the original copy of the same. Shallow copy enables faster execution of the program.

Deep copy is used for storing values that are already copied. Unlike shallow copy, it doesn’t copy the reference pointers to the objects. Deep copy makes the reference to an object in addition to storing the new object that is pointed by some other object.

Changes made to the original copy will not affect any other copy that makes use of the referenced or stored object. Contrary to the shallow copy, a deep copy makes the execution of a program slower. This is due to the fact that it makes some copies for each object that is called.

03. Why Is It Important?
Answer: Although this has nothing to do specifically with Python programming interview questions, there’s a good chance that you will have to answer these types of questions. In any position, technical or not, the behavioral aspects of each individual also play a critical in the selection process. This is because even if you’re the best Python programmer in the marketplace, it won’t mean much if you can’t perform efficiently and effectively on the job.

04. What are python and name some key features of it?
Answer: Python is an interpreter-based programming language, interactive and object-oriented scripting language. Python is designed to be highly readable.

It is an interpreter based language which means that, unlike other languages like C and variants, the compilation doesn’t require before running.
It’s dynamically typed, which means you need not to define the datatypes of the declared variables and anything like that.
Eg: You can declare variable x=10 and then x=” Hello World” without error it will define the datatype by default depending on its value.

05. What is Python good for?
Answer: Python is a high-level general-purpose programming language that can be applied to many different classes of problems.

The language comes with a large standard library that covers areas such as string processing like regular expressions, Unicode, calculating differences between files, Internet protocols like HTTP, FTP, SMTP, XML-RPC, POP, IMAP, CGI programming, software engineering like unit testing, logging, profiling, parsing Python code, and operating system interfaces like system calls, file systems, TCP/IP sockets. (E learning portal)

06. How Python does Compile-time and Run-time code checking?
Answer: In Python, some amount of coding is done at compile-time, but most of the checking such as type, name, etc. are postponed until code execution. Consequently, if the Python code references a user-defined function that does not exist, the code will compile successfully. The Python code will fail only with an exception when the code execution path does not exist.

07. How do you launch sub-processes within the main process of a Python application?
Answer: Python has a built-in module called sub-process. You can import this module and either use run() or Popen() function calls to launch a sub-process and get the control of its return code.

08. How do you invoke the Python interpreter for interactive use?
Answer: python or python.y where x.y is the version of the Python interpreter desired.

09. When Would You Use a List vs. a Tuple vs. a Set in Python?
Answer: A list is a common data type that is highly flexible. It can store a sequence of objects that are mutable, so it’s ideal for projects that demand the storage of objects that can be changed later.

A tuple is similar to a list in Python, but the key difference between them is that tuples are immutable. They also use less space than lists and can only be used as a key in a dictionary. Tuples are a perfect choice when you want a list of constants.

Sets are a collection of unique elements that are used in Python. Sets are a good option when you want to avoid duplicate elements in your list. This means that whenever you have two lists with common elements between them, you can leverage sets to eliminate them.

10. What is slicing in Python?
Answer: Slicing is a mechanism used to select a range of items from sequence type like list, tuple, and string. It is beneficial and easy to get elements from a range by using slice way. It requires a : (colon) which separates the start and end index of the field. All the data collection types List or tuple allows us to use slicing to fetch elements. Although we can get elements by specifying an index, we get only single element whereas using slicing we can get a group of elements.

11. What is the difference between deep and shallow copy?
Answer: Shallow copy is used when a new instance type gets created and it keeps the values that are copied in the new instance. Shallow copy is used to copy the reference pointers just like it copies the values. These references point to the original objects and the changes made in any member of the class will also affect the original copy of it. Shallow copy allows faster execution of the program and it depends on the size of the data that is used.

Deep copy is used to store the values that are already copied. The deep copy doesn’t copy the reference pointers to the objects. It makes the reference to an object and the new object that is pointed by some other object gets stored. The changes made in the original copy won’t affect any other copy that uses the object. Deep copy makes the execution of the program slower due to making certain copies for each object that is been called.

12. What is the difference between range() and xrange() functions in Python?
Answer: range() is a function that returns a list of numbers, which will be an overhead if the number is too large. Whereas, xrange() is a generator function that returns an iterator which returns a single generated value whenever it is called. 

13. What is the difference between range & xrange? Explain?
Answer: For the most part, xrange and range are the exact same in terms of functionality. They both provide a way to generate a list of integers for you to use, however you please. The only difference is that range returns a Python list object and x range returns an xrange object.

This means that xrange doesn’t actually generate a static list at run-time as the range does. It creates the values as you need them with a special technique called yielding. This technique is used with a type of object known as generators. That means that if you have a really gigantic range you’d like to generate a list for, say one billion, xrange is the function to use.

This is especially true if you have a real memory sensitive system such as a cell phone that you are working with, as the range will use as much memory as it can to create your array of integers, which can result in a Memory Error and crash your program. It’s a memory hungry beast.

14. How is memory managed in Python?
Answer: Memory management in python is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have access to this private heap. The python interpreter takes care of this instead.
The allocation of heap space for Python objects is done by Python’s memory manager. The core API gives access to some tools for the programmer to code.
Python also has an inbuilt garbage collector, which recycles all the unused memory and so that it can be made available to the heap space.

15. Why Is This Important?
Answer: When it comes to Python interview questions, this one may sound a little silly if you’re a seasoned professional, but it’s best to be ready for it with a comprehensive answer. However, if you’re going for an interview straight after graduation, it will make perfect sense to be asked this question. In this scenario, it will also help your cause if you make some comparisons.

16. What are the generator functions in Python?
Answer: Any function that contains at least one yield statement is called a generator function instead of a return statement. The difference between return and yield is, return statement terminates the function, and yield statement saving all its states pauses and later continues from there on successive calls.

17. How Python supports encapsulation with respect to functions?
Answer: Python supports inner functions. A function defined inside a function is called an inner function, whose behavior is not hidden. This is how Python supports encapsulation with respect to functions.

18. How to overload constructors or methods in Python?
Answer: Python’s constructor: _init__ () is the first method of a class. Whenever we try to instantiate an object __init__() is automatically invoked by python to initialize members of an object. We can’t overload constructors or methods in Python. It shows an error if we try to overload. (python programming interview questions)

19. How do you perform pattern matching in Python? Explain?
Answer: Regular Expressions/REs/ regexes enable us to specify expressions that can match specific “parts” of a given string. For instance, we can define a regular expression to match a single character or a digit, a telephone number, or an email address, etc. The Python’s “re” module provides regular expression patterns and was introduce from later versions of Python 2.5. “re” module is providing methods for search text strings, or replacing text strings along with methods for splitting text strings based on the pattern defined.

20. What is a negative index in Python?
Answer: Python sequences are accessible using an index in positive and negative numbers. For example, 0 is the first positive index, 1 is the second positive index and so on. For negative indexes -1 is the last negative index, -2 is the second last negative index and so on.

Index traverses from left to right and increases by one until the end of the list.

Negative index traverse from right to left and iterate one by one till the start of the list. A negative index is used to traverse the elements into reverse order.

21. What Are Python Iterators?
Answer: Iterators in Python are array-like objects which allow moving on the next element. We use them in traversing a loop, for example, in a “for” loop.
Python library has a no. of iterators. For example, a list is also an iterator and we can start a for loop over it.

22. How do you implement JSON given that Python is best suited for the server-side application?
Answer: Python has built-in support to handle JSON objects.

You just have to import the JSON module and use the functions such as loads and dumps to convert from JSON string to JSON object and vice versa. It is a straightforward way to handle and exchange JSON based data from the server-side. 

23. What is the process of compilation and linking in python?
Answer: The compiling and linking allows the new extensions to be compiled properly without any error and the linking can be done only when it passes the compiled procedure. If the dynamic loading is used then it depends on the style that is being provided with the system. The python interpreter can be used to provide the dynamic loading of the configuration setup files and will rebuild the interpreter.

The steps that are required in this as:

Create a file with any name and in any language that is supported by the compiler of your system. For example file.c or file.cpp
Place this file in the Modules/ directory of the distribution which is getting used.
Add a line in the file Setup.local that is present in the Modules/ directory.
Run the file using spam file.o
After successful run of this rebuild the interpreter by using the make command on the top-level directory.
If the file is changed then run rebuildMakefile by using the command as ‘make Makefile’.

24. What is the Dictionary?
Answer:

Dictionary objects can be created by using curly braces {} or by calling dictionary function
Dictionary objects are mutable objects
Dictionary represents a key-value base
Each key-value pair of Dictionary is known as an item
Dictionary keys must be immutable
Dictionary values can be mutable or immutable
Duplicate keys are not allowed but values can be duplicate
Insertion order is not preserved
Heterogeneous keys and heterogeneous values are allowed.
25. What is map function in Python?
Answer: map function executes the function given as the first argument on all the elements of the iterable given as the second argument. If the function given takes in more than 1 arguments, then many tables are given. #Follow the link to know more similar functions.

26. Explain the interpretation in Python?
Answer:  Programs in python run directly from the source code.

27. What Are The Implementation In Python Program?
Answer: Python program can be implemented in two ways

1. Interactive Mode (Submit statement by statement explicitly)
2. Batch Mode (Writing all statements and submit all statements)

In Interactive mode, the python command shell is required. It is available in the installation of python cell.
In Interactive mode is not suitable for developing the projects & Applications
Interactive mode is used for predefined function and programs.

28. What is PIP software in the Python world?
Answer: PIP is an acronym for Python Installer Package which provides a seamless interface to install various Python modules. It is a command-line tool which can search for packages over the internet and install them without any user interaction.

29. What is a dictionary in Python?
Answer: The Python dictionary is a built-in data type. It defines a one-to-one relationship between keys and values. Dictionaries contain a pair of keys and their corresponding values. It stores elements in key and value pairs. The keys are unique whereas values can be duplicate. The key accesses the dictionary elements.

30. What Is the Accomplishment You Are Most Proud Of?
Answer: This interview question is designed to test your storytelling skills in the context of a professional example. So it’s important to start by setting the stage for your example. You can do this by talking about where you were working at the time, the project you were working on, the people you worked with, how you worked (tools, processes, the time is taken), and the specific results.

You will have to think on your feet as there may well be follow-up questions, so be prepared to dive in and get into the nitty-gritty details. It’s essential to use a recent example here, so keep it fresh and give the recruiter a chance to imagine your future success based on your past work experience. 

31. Can Python be used for web client and web server side programming? And which one is best suited to Python?
Answer:  Python is best suited for web server-side application development due to its vast set of features for creating business logic, database interactions, web server hosting, etc.

However, Python can be used as a web client-side application which needs some conversions for a browser to interpret the client-side logic. Also, note that Python can be used to create desktop applications which can run as a standalone application such as utilities for test automation.

32. How many data types are there in Python?
Answer: One of the more common interview questions on Python – you might get asked to either say the number or actually name them.
Python has five different data types: string, list, number, dictionary, and tuple.

33. What are the Runtime Errors?
Answer: The errors which occur after starting the execution of the programs are known as runtime errors.
Runtime errors can occur because of

Invalid Input
Invalid Logic
Memory issues
Hardware failures and so on
With respect to every reason which causes to runtime error corresponding runtime error representation class is available

Runtime error representation classes technically we call as an exception class.
While executing the program if any runtime error occurs corresponding runtime error representation class object is created
Creating a runtime error representation class object is technically known as a rising exception
While executing the program if an exception is raised, then internally python interpreter verify any code is implemented to handle the raised exception or not
If a code is not implemented to handle raised exception then the program will be terminated abnormally

34. What is the difference between NumPy and SciPy?
Answer: In an ideal world, NumPy would contain nothing but the array data type and the most basic operations: indexing, sorting, reshaping, basic elementwise functions, et cetera.
All numerical code would reside in SciPy. However, one of NumPy’s important goals is compatibility, so NumPy tries to retain all features supported by either of its predecessors.
Thus NumPy contains some linear algebra functions, even though these more properly belong in SciPy. In any case, SciPy contains more fully-featured versions of the linear algebra modules, as well as many other numerical algorithms.
If you are doing scientific computing with python, you should probably install both NumPy and SciPy. Most new features belong in SciPy rather than NumPy. 

35. How is Python executed?
Answer: Python files are compiled to bytecode. which is then executed by the host.

36. What Is the Biggest Challenge Facing Your Current Job Right Now? What Is Your Biggest Failure?
Answer: This question comes up often regardless of the field because it helps the interviewer get an idea of your approach to problem-solving in your new potential role. The way you approach the answer will make you look awesome, or it will be a red flag. So it will be critical to think about this beforehand and answer the question without delay.

As a rule, don’t complain about the management at your current job or blame the people you’re working with. It’s also not a good idea to pretend like your career has been a walk in the park. Instead, tailor your answer to a project you worked on, but don’t get specific about why the challenge turned out to be difficult in the first place. Instead, concentrate on the problem-solving process to highlight your skills.

When it comes to your biggest failure, it’s critical that you don’t use this time to talk yourself down. If you can’t think of a specific scenario, think of a time when you were disappointed about something that didn’t work out. The primary objective is to show the interviewer how you managed to turn something negative into something positive. 

37. What should be the typical build environment for Python-based application development?
Answer: You just need to install Python software and using PIP, you can install various Python modules from the open source community.

For IDE, Pycharm is highly recommended for any kind of application development with vast support for plugins. Another basic IDE is called a RIDE and is a part of the Python open source community.

38. How do you open an already existing file and add content to it?
Answer: In Python, open(,) is used to open a file in different modes. The open function returns a handle to the file, using which one can perform read, write and modify operations.

39. What is multithreading? Give an example?
Answer: It means running several different programs at the same time concurrently by invoking multiple threads. Multiple threads within a process refer the data space with the main thread and they can communicate with each other to share information more easily. Threads are light-weight processes and have less memory overhead. Threads can be used just for a quick task like calculating results and also running other processes in the background while the main program is running.

40. What is Python Tuples and how is it different from Lists?
Answer: Tuples is basically a sequence of elements which are separated by commas and are enclosed in parenthesis.

Lists whereas is a sequence of elements which are separated by commas and are enclosed in brackets. Also, Tuples cannot be updated whereas, in lists, elements can be updated along with their sizes.

41. What is an operator in Python?
Answer: An operator is a particular symbol which is used on some values and produces an output as a result. An operator works on operands. Operands are numeric literals or variables which hold some values. Operators can be unary, binary or ternary. An operator which require a single operand known as a unary operator, which require two operands known as a binary operator and which require three operands is called ternary operator.

42. How do I test a Python program or component?
Answer: Python comes with two testing frameworks:

The documentation test module finds examples in the documentation strings for a module and runs them, comparing the output with the expected output given in the documentation string.
The unit test module is a fancier testing framework modeled on Java and Smalltalk testing frameworks.

For testing, it helps to write the program so that it may be easily tested by using good modular design. Your program should have almost all functionality encapsulated in either functions or class methods. And this sometimes has the surprising and delightful effect of making the program run faster because local variable accesses are faster than global accesses.

Furthermore, the program should avoid depending on mutating global variables, since this makes testing much more difficult to do.
The “global main logic” of your program may be as simple as.

43. Explain what Flask is and its benefits?
Answer: Flask is a web microframework for Python based on “Werkzeug, Jinja2 and good intentions” BSD license. Werkzeug and Jinja2 are two of its dependencies. This means it will have little to no dependencies on external libraries. It makes the framework light while there is a little dependency to update and fewer security bugs.

A session basically allows you to remember information from one request to another. In a flask, a session uses a signed cookie so the user can look at the session contents and modify. The user can modify the session if only it has the secret key Flask.secret_key.

44. What Is The Statement That Can Be Used In Python If The Program Requires No Action But Requires It Syntactically?
Answer: The pass statement is a null operation. Nothing happens when it executes. You should use “pass” keyword in lowercase. If you write “Pass,” you’ll face an error like “NameError: name Pass is not defined.” Python statements are case sensitive.

45. Why do you need to make your code more readable?
Answer: We need to make our code more readable so that other programmer can understand our code. Basically, for a large project, many programmers work together. So, if the readability of the code is poor, it will be difficult for others to improve the code later.

46. How will you convert an integer to a hexadecimal string in python?
Answer: Converts an integer to a hexadecimal string.

47. What is the namespace in Python?
Answer: In Python, every name has a place where it lives. It is known as a namespace. It is like a box where a variable name maps to the object placed. Whenever the variable is searched out, this box will be searched, to get the corresponding object.

48. How can you organize your code to make it easier to change the base class?
Answer: You have to define an alias for the base class, assign the real base class to it before your class definition, and use the alias throughout your class. You can also use this method if you want to decide dynamically (e.g., depending on the availability of resources) which base class to use. 

49. What are the different file processing modes supported by Python?
Answer: Python provides three modes to open files. The read-only, write-only, read-write and append mode. ‘r’ is used to open a file in read-only mode, ‘w’ is used to open a file in write-only mode, ‘rw’ is used to open in reading and write mode, ‘a’ is used to open a file in append mode. If the mode is not specified, by default file opens in read-only mode.

50. What’s the Difference Between a List and a Dictionary?
Answer: A list and a dictionary in Python are essentially different types of data structures. Lists are the most common data types that boast significant flexibility. Lists can be used to store a sequence of objects that are mutable (so they can be modified after they are created).

In Python, you can’t use a list as a “key” for the dictionary (technically you can hash the list first via your own custom hash functions and use that as a key). A Python dictionary is fundamentally an unordered collection of key-value pairs. It’s a perfect tool to work with an enormous amount of data since dictionaries are optimized for retrieving data (but you have to know the key to retrieve its value).

It can also be described as the implementation of a hashtable and as a key-value store. In this scenario, you can quickly look up anything by its key, but since it’s unordered, it will demand that keys are hashes. When you work with Python, dictionaries are defined within curly braces {} where each item will be a pair in the form key: value.

51. When do you choose a list over a tuple?
Answer: When there is an immutable ordered list of elements we choose tuple. Because we cannot add/remove an element from the tuple. On the other hand, we can add elements to a list using append () or extend() or insert(), etc., and delete elements from a list using remove() or pop().

Simple tuples are immutable, and lists are not. Based on these properties one can decide what to choose in their programming context.

52. What is the purpose of the PYTHONSTARTUP environment variable?
Answer: PYTHONSTARTUP – It contains the path of an initialization file containing Python source code. It is executed every time you start the interpreter. It is named as .pythonrc.py in Unix and it contains commands that load utilities or modify PYTHONPATH.

53. What are the rules for a local and global variable in Python?
Answer: In Python, variables that are only referenced inside a function are called implicitly global. If a variable is assigned a new value anywhere within the function’s body, it’s assumed to be a local. If a variable is ever assigned a new value inside the function, the variable is implicitly local, and we need to declare it as ‘global’ explicitly. To make a variable globally, we need to declare it by using the global keyword. Local variables are accessible within the local body only. Global variables are accessible anywhere in the program, and any function can access and modify its value.

54. As Python is more suitable for the server-side application, it is very important to have threading implemented in your server code. How can you achieve that in Python?
Answer: We should use the threading module to implement, control and destroy threads for parallel execution of the server code. Locks and Semaphores are available as synchronization objects to manage data between different threads.

55. How to remove leading whitespaces from a string in the Python?
Answer: To remove leading characters from a string, we can use strip() function. It is Python string function which takes an optional char type parameter. If a parameter is provided, it removes the character. Otherwise, it removes all the leading spaces from the string.

**********************************************************************************************************************************************
Python Coding Interview Questions
1. What are the key features of Python?
Answer: Python is an interpreted language. That means that, unlike languages like C and its variants, Python does not need to be compiled before it is run. Other interpreted languages include PHP and Ruby.
Python is dynamically typed, this means that you don’t need to state the types of variables when you declare them or anything like that. You can do things like x=111 and then x=”I’m a string” without error
Python is well suited to object-orientated programming in that it allows the definition of classes along with composition and inheritance. Python does not have access specifiers (like C++’s public, private), the justification for this point is given as “we are all adults here”
In Python, functions are first-class objects. This means that they can be assigned to variables, returned from other functions and passed into functions. Classes are also first-class objects
Writing Python code is quick but running it is often slower than compiled languages. Fortunately，Python allows the inclusion of C based extensions so bottlenecks can be optimized away and often are. The numpy package is a good example of this, it’s really quite quick because a lot of the number-crunching it does isn’t actually done by Python (python coding interview questions)

2. What is a dictionary in Python?
Answer: The built-in data types in Python is called a dictionary. It defines a one-to-one relationship between keys and values. Dictionaries contain a pair of keys and their corresponding values. Dictionaries are indexed by keys.

3. How is Multithreading achieved in Python?
Answer: Python has a multi-threading package but if you want to multi-thread to speed your code up, then it’s usually not a good idea to use it.
Python has a construct called the Global Interpreter Lock (GIL). The GIL makes sure that only one of your ‘threads’ can execute at any one time. A thread acquires the GIL, does a little work, then passes the GIL onto the next thread.
This happens very quickly so to the human eye it may seem like your threads are executing in parallel, but they are really just taking turns using the same CPU core.
All this GIL passing adds overhead to execution. This means that if you want to make your code run faster then using the threading package often isn’t a good idea. (E learning portal)

4. What does this mean: *args,kwargs? And why would we use it?
Answer: We use *args when we aren’t sure how many arguments are going to be passed to a function, or if we want to pass a stored list or tuple of arguments to a function. **kwargsis used when we don’t know how many keyword arguments will be passed to a function, or it can be used to pass the values of a dictionary as keyword arguments. The identifiers args and kwargs are a convention, you could also use *bob and **billy but that would not be wise.

5. What are Python’s dictionaries?
Answer: Python’s dictionaries are kind of hash table type. They work like associative arrays or hashes found in Perl and consist of key-value pairs. A dictionary key can be almost any Python type but are usually numbers or strings. Values, on the other hand, can be any arbitrary Python object.

6. How will you convert an integer to a Unicode character in python?
Answer: Converts an integer to a Unicode character.

7. What is the difference between del() and remove() methods of the list?
Answer: To remove a list element, you can use either the del statement if you know exactly which element(s) you are deleting or the remove() method if you do not know.

8. How Does Python Handle Memory Management?
Answer: Python uses private heaps to maintain its memory. So the heap holds all the Python objects and the data structures. This area is only accessible to the Python interpreter; programmers can’t use it.
And it’s the Python memory manager that handles the Private heap. It does the required allocation of the memory for Python objects.
Python employs a built-in garbage collector, which salvages all the unused memory and offloads it to the heap space.

9. What Is “Call By Reference” In Python?
Answer: We use both “call-by-reference” and “pass-by-reference” interchangeably. When we pass an argument by reference, then it is available as an implicit reference to the function, rather than a simple copy. In such a case, any modification to the argument will also be visible to the caller.

This scheme also has the advantage of bringing more time and space efficiency because it leaves the need for creating local copies.

On the contrary, the disadvantage could be that a variable can get changed accidentally during a function call. Hence, the programmers need to handle in the code to avoid such uncertainty.

10. Why And When Do You Use Generators In Python?
Answer: A generator in Python is a function which returns an iterable object. We can iterate on the generator object using the yield keyword. But we can only do that once because their values don’t persist in memory, they get the values on the fly.

Generators give us the ability to hold the execution of a function or a step as long as we want to keep it. However, here are a few examples where it is beneficial to use generators.

We can replace loops with generators for efficiently calculating results involving large data sets.
Generators are useful when we don’t want all the results and wish to hold back for some time.
Instead of using a callback function, we can replace it with a generator. We can write a loop inside the function doing the same thing as the callback and turns it into a generator.

11. Name the File-related modules in Python?
Answer: Python provides libraries/modules with functions that enable you to manipulate text files and binary files on the file system. Using them you can create files, update their contents, copy, and delete files. The libraries are os, os.path, and shutil.

12. Is Python object-oriented? what is object-oriented programming?
Answer: Yes. Python is Object Oriented Programming language. OOP is the programming paradigm based on classes and instances of those classes called objects. The features of OOP are:

Encapsulation, Data Abstraction, Inheritance, Polymorphism.

13. Explain Inheritance in Python with an example?
Answer: Inheritance allows One class to gain all the members(say attributes and methods) of another class. Inheritance provides code reusability, makes it easier to create and maintain an application. The class from which we are inheriting is called super-class and the class that is inherited is called a derived / child class.

They are different types of inheritance supported by Python:

Single Inheritance – where a derived class acquires the members of a single superclass.
Multi-level inheritance – a derived class d1 in inherited from base class base1, and d2 are inherited from base2.
Hierarchical inheritance – from one base class you can inherit any number of child classes
Multiple inheritance – a derived class is inherited from more than one base class.

14. What are negative indexes and why are they used?
Answer: The sequences in Python are indexed and it consists of the positive as well as negative numbers. The numbers that are positive uses ‘0’ that is used as the first index and ‘1’ as the second index and the process goes on like that.

The index for the negative number starts from ‘-1’ that represents the last index in the sequence and ‘-2’ as the penultimate index and the sequence carries forward like the positive number.

The negative index is used to remove any new-line spaces from the string and allow the string to except the last character that is given as. The negative index is also used to show the index to represent the string incorrect order.

15. How many kinds of sequences are supported by Python? What are they
Answer: Python supports 7 sequence types. They are str, list, tuple, Unicode, byte array, xrange, and buffer. where xrange is deprecated in python 3.5.X.

16. Does Python support interfaces like in Java?
Answer: Python does not provide interfaces like in Java. Abstract Base Class (ABC) and its feature are provided by the Python’s “ABC” module. Abstract Base Class is a mechanism for specifying what methods must be implemented by its implementation subclasses. The use of ABC’s provides a sort of “understanding” about methods and their expected behavior. This module was made available from Python 2.7 version onwards.

17. What’s the Difference between a For Loop and a While Loop?
Answer: In Python, a loop iterates over popular data types (like dictionaries, lists, or strings) while the condition is true. This means that the program control will pass to the line immediately following the loop whenever the condition is false. In this scenario, it’s not a question of preference, but a question of what your data structures are.

For Loop

In Python (and in almost any other programming language), For Loop is the most common type of loop. For Loop is often leveraged to iterate through the elements of an array.

For example:

For Loop can also be used to perform a fixed number of iterations and iterate by a given (positive or even negative) increment. It’s important to note that by default, the increment will always be one.

While Loop

While Loop can be used in Python to perform an indefinite number of iterations as long as the condition remains true.

For example:

While (condition) do…

When using the While Loop, you have to explicitly specify a counter to keep track of how many times the loop was executed. However, While Loop can’t define its own variable. Instead, it has to be previously defined and will continue to exist even after you exit the loop.

When compared to For Loop, While Loop is inefficient because it’s much slower. This can be attributed to the fact that it checks the condition after each iteration. However, if you need to perform one or more conditional checks in a For Loop, you will want to consider using While Loop instead (as these checks won’t be required).

18. What is a module in Python?
Answer: A module is a .py file in Python in which variables, functions, and classes can be defined. It can also have a runnable code.

You may also like: 8 Up-and-Coming Programming Languages Developers Should Know.

19. What is the lambda operator?
Answer: The lambda operator is used to create anonymous functions. It is mostly used in cases where one wishes to pass functions as parameters. or assign them to variable names. 

20. Explain the use of break and continue in Python looping?
Answer: The break statement stops the execution of the current loop. and transfers control to the next block. The continue statement ends the current block’s execution and jumps to the next iteration of the loop.

21. How does the Python version numbering scheme work?
Answer: Python versions are numbered A.B.C or A.B.

A is the major version number. It is only incremented for major changes in the language.
B is the minor version number, incremented for less earth-shattering changes.
C is the micro-level. It is incremented for each bugfix release.
Not all releases are bug fix releases. In the run-up to a new major release, ‘A’ series of development releases are made denoted as alpha, beta, or release candidate.

Alphas are early releases in which interfaces aren’t finalized yet; it’s not unexpected to see an interface change between two alpha releases.
Betas are more stable, preserving existing interfaces but possibly adding new modules, and release candidates are frozen, making no changes except as needed to fix critical bugs.
Alpha, beta and release candidate versions have an additional suffix.
The suffix for an alpha version is “aN” for some small number N,
The suffix for a beta version is “bN” for some small number N,
And the suffix for a release candidate version is “CN” for some small number N.
In other words, all versions labeled 2.0aN precede the versions labeled 2.0bN, which precede versions labeled 2.0cN, and those precede 2.0.

You may also find version numbers with a “+” suffix, e.g. “2.2+”. These are unreleased versions, built directly from the subversion trunk. In practice, after a final minor release is made, the subversion trunk is incremented to the next minor version, which becomes the “a0” version, e.g. “2.4a0”.

22. How do I send mail from a Python script?
Answer: Use the standard library module smtplib. Here’s a very simple interactive mail sender that uses it. This method will work on any host that supports an SMTP listener.

23. What is a Tuple?
Answer:

Tuple Objects can be created by using parenthesis or by calling tuple function or by assigning multiple values to a single variable
Tuple objects are immutable objects
Incision order is preserved
Duplicate elements are allowed
Heterogeneous elements are allowed
Tuple supports both positive and negative indexing
The elements of the tuple can be mutable or immutable
24. What is Garbage Collection?
Answer:

The concept of removing unused or unreferenced objects from the memory location is known as a Garbage Collection.
While executing the program, if garbage collection takes place then more memory space is available for the program and rest of the program execution becomes faster.
The garbage collector is a predefined program, which removes the unused or unreferenced objects from the memory location
Any object reference count becomes zero then we call that object as an unused or unreferenced object
Then no.of reference variables which are pointing the object is known as a reference count of the object.
While executing the python program if any object reference count becomes zero, then internally python interpreter calls the garbage collector and garbage collector will remove that object from memory location.
25. What is Hierarchical Inheritance?
Answer: The concept of inheriting the properties from one class into multiple classes separately is known as hierarchical inheritance.

26. How to pass optional or keyword parameters from one function to another in Python?
Answer: We can arrange arguments using the * and ** specifiers in the function’s parameter list.

27. What tools can be used to unit test your Python code?
Answer: The best and easiest way is to use ‘unit test’ python standard library to test units/classes. The features supported are very similar to the other unit testing tools such as JUnit, TestNG.

28. What is the best way to parse strings and find patterns in Python?
Answer: Python has built-in support to parse strings using Regular expression module. Import the module and use the functions to find a substring, replace a part of a string, etc.

29. Which databases are supported by Python?
Answer: MySQL (Structured) and MongoDB (Unstructured) are the prominent databases that are supported natively in Python. Import the module and start using the functions to interact with the database.

30. What is the starting point of Python code execution?
Answer: As Python is an interpreter, it starts reading the code from the source file and starts executing them.

However, if you want to start from the main function, you should have the following special variable set in your source file as:

31. How can you create a GUI based application in Python for client-side functionality?
Answer: Python along with standard library Tkinter can be used to create GUI based applications. Tkinter library supports various widgets which can create and handle events which are widget specific.

32. What is the use of Assertions in Python?
Answer: Assert statement is used to evaluate the expression attached. If the expression is false, then python raised AssertionError Exception.

33. What is the difference between a shallow copy and deep copy?
Answer: Shallow copy is used when a new instance type gets created and it keeps values that are copied whereas deep copy stores values that are already copied.

A shallow copy has faster program execution whereas deep coy makes it slow.

34. What are the advantages of Python?
Answer: Depending on requirements for the availability of the application, the size of the user population and other factors you can decide how to divide the development environment from the production environment.

For certain applications, it is acceptable to combine the development server with the deployment server, as long as the end users understand that sometimes the application is not available.

Other applications may require two (development and production) or even three (development, test, and production) servers.

In Application Express applications can be moved from environment to environment using an export and import facility for application definitions.

With one server available to run the database and Application Express, you can still separate the development version of an application from its production version by using two workspaces accessing separate schemas.

In this case, one workspace will be used by developers and the other will be the workspace in which the application is deployed in production.

35. What is the zip() function in Python?
Answer: The Python zip() function is used to transform multiple lists, i.e., list1, list2, list3 and many more into a single list of tuples. This method takes an iterable and returns a tuple of the iterable. If we don’t pass iterable, it returns an empty iterator.

36. What is the difference between remove() function and del statement?
Answer: The del statement is used to remove list, dictionary or a key. We need to pass an index which we want to delete. Del is a fast way to remove elements from the list.

The remove() method is used to remove elements from the list. It searches the element before deleting which makes it slower than del. Del and remove both are used to remove element but del has a performance edge over remove.

37. Why do we use join() function in Python?
Answer: This method is used to concatenate a string with an iterable object. It returns a new string which is the concatenation of the strings in iterable. It throws an exception TypeError if iterable contains any non-string value.

38. Define the support for APEX that exists?
Answer: Application Express could be the best community for some to help deliver, develop & the use of APEX applications. The basic support is from APEX forum of Oracle Tech Network. We can find answers & tips related to development from in & out of Oracle.

39. What is tuple in Python?
Answer: A tuple is a built-in data collection type. It allows us to store values in a sequence. It is immutable, so no change is reflected in the original data. It uses () brackets rather than [] square brackets to create a tuple. We cannot remove any element but can find in the tuple. We can use indexing to get elements. It also allows traversing elements in reverse order by using negative indexing. Tuple supports various methods like max(), sum(), sorted(), Len() etc.

40. Which are the file related libraries/modules in Python?
Answer: Python provides libraries/modules including functions that facilitate us to manipulate text files and binary files on the file system. By using these libraries, we can create files, update their contents, copy, and delete files.

These libraries are os, os.path, and shutil.

os and os.path: os and os.path libraries include functions for accessing the filesystem.

shutil: This library is used to copy and delete the files.

41. is Python interpreted language?
Answer: Python is an interpreted language. The Python language program runs directly from the source code. It converts the source code into an intermediate language code, which is again translated into machine language that has to be executed.


*****************************************************************************************************************************************************
Python Programming Language Interview Questions
1. Why Is This Important?
Answer: When it comes to Python interview questions, this one may sound a little silly if you’re a seasoned professional, but it’s best to be ready for it with a comprehensive answer. However, if you’re going for an interview straight after graduation, it will make perfect sense to be asked this question. In this scenario, it will also help your cause if you make some comparisons. (Python Programming Language Interview Questions)

2. What is Python good for?
Answer: Python is a high-level general-purpose programming language that can be applied to many different classes of problems.

The language comes with a large standard library that covers areas such as string processing like regular expressions, Unicode, calculating differences between files, Internet protocols like HTTP, FTP, SMTP, XML-RPC, POP, IMAP, CGI programming, software engineering like unit testing, logging, profiling, parsing Python code, and operating system interfaces like system calls, file systems, TCP/IP sockets.

3. Explain what Flask is and its benefits?
Answer: Flask is a web microframework for Python based on “Werkzeug, Jinja2 and good intentions” BSD license. Werkzeug and Jinja2 are two of its dependencies. This means it will have little to no dependencies on external libraries. It makes the framework light while there is a little dependency to update and fewer security bugs.

A session basically allows you to remember information from one request to another. In a flask, a session uses a signed cookie so the user can look at the session contents and modify. The user can modify the session if only it has the secret key Flask.secret_key.

4. What is the purpose of the PYTHONSTARTUP environment variable?
Answer: PYTHONSTARTUP – It contains the path of an initialization file containing Python source code. It is executed every time you start the interpreter. It is named as .pythonrc.py in Unix and it contains commands that load utilities or modify PYTHONPATH.

5. How will you convert an integer to a hexadecimal string in python?
Answer: Converts an integer to a hexadecimal string.

6. What Is The Statement That Can Be Used In Python If The Program Requires No Action But Requires It Syntactically?
Answer: The pass statement is a null operation. Nothing happens when it executes. You should use “pass” keyword in lowercase. If you write “Pass,” you’ll face an error like “NameError: name Pass is not defined.” Python statements are case sensitive. (Online training institute)

7. What Are Python Iterators?
Answer: Iterators in Python are array-like objects which allow moving on the next element. We use them in traversing a loop, for example, in a “for” loop.
Python library has a no. of iterators. For example, a list is also an iterator and we can start a for loop over it.

8. How is memory managed in Python?
Answer: Memory management in python is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have access to this private heap. The python interpreter takes care of this instead.
The allocation of heap space for Python objects is done by Python’s memory manager. The core API gives access to some tools for the programmer to code.
Python also has an inbuilt garbage collector, which recycles all the unused memory and so that it can be made available to the heap space.

9. What is map function in Python?
Answer: map function executes the function given as the first argument on all the elements of the iterable given as the second argument. If the function given takes in more than 1 arguments, then many tables are given. #Follow the link to know more similar functions.

10. What is multithreading? Give an example?
Answer: It means running several different programs at the same time concurrently by invoking multiple threads. Multiple threads within a process refer the data space with the main thread and they can communicate with each other to share information more easily. Threads are light-weight processes and have less memory overhead. Threads can be used just for a quick task like calculating results and also running other processes in the background while the main program is running.

11. What’s the Difference Between a List and a Dictionary?
Answer: A list and a dictionary in Python are essentially different types of data structures. Lists are the most common data types that boast significant flexibility. Lists can be used to store a sequence of objects that are mutable (so they can be modified after they are created).

In Python, you can’t use a list as a “key” for the dictionary (technically you can hash the list first via your own custom hash functions and use that as a key). A Python dictionary is fundamentally an unordered collection of key-value pairs. It’s a perfect tool to work with an enormous amount of data since dictionaries are optimized for retrieving data (but you have to know the key to retrieve its value).

It can also be described as the implementation of a hashtable and as a key-value store. In this scenario, you can quickly look up anything by its key, but since it’s unordered, it will demand that keys are hashes. When you work with Python, dictionaries are defined within curly braces {} where each item will be a pair in the form key: value.

12. Why Is It Important?
Answer: Although this has nothing to do specifically with Python programming interview questions, there’s a good chance that you will have to answer these types of questions. In any position, technical or not, the behavioral aspects of each individual also play a critical in the selection process. This is because even if you’re the best Python programmer in the marketplace, it won’t mean much if you can’t perform efficiently and effectively on the job.

13. What Is the Accomplishment You Are Most Proud Of?
Answer: This interview question is designed to test your storytelling skills in the context of a professional example. So it’s important to start by setting the stage for your example. You can do this by talking about where you were working at the time, the project you were working on, the people you worked with, how you worked (tools, processes, the time is taken), and the specific results.

You will have to think on your feet as there may well be follow-up questions, so be prepared to dive in and get into the nitty-gritty details. It’s essential to use a recent example here, so keep it fresh and give the recruiter a chance to imagine your future success based on your past work experience.

14. When Would You Use a List vs. a Tuple vs. a Set in Python?
Answer: A list is a common data type that is highly flexible. It can store a sequence of objects that are mutable, so it’s ideal for projects that demand the storage of objects that can be changed later.

A tuple is similar to a list in Python, but the key difference between them is that tuples are immutable. They also use less space than lists and can only be used as a key in a dictionary. Tuples are a perfect choice when you want a list of constants.

Sets are a collection of unique elements that are used in Python. Sets are a good option when you want to avoid duplicate elements in your list. This means that whenever you have two lists with common elements between them, you can leverage sets to eliminate them.

15. How many data types are there in Python?
Answer: One of the more common interview questions on Python – you might get asked to either say the number or actually name them.
Python has five different data types: string, list, number, dictionary, and tuple.

16. How will you differentiate between deep copy and shallow copy?
Answer: We use a shallow copy when a new instance type gets created. It keeps the values that are copied in the new instance. Just like it copies the values, the shallow copy also copies the reference pointers.

Reference points copied in the shallow copy reference to the original objects. Any changes made in any member of the class affects the original copy of the same. Shallow copy enables faster execution of the program.

Deep copy is used for storing values that are already copied. Unlike shallow copy, it doesn’t copy the reference pointers to the objects. Deep copy makes the reference to an object in addition to storing the new object that is pointed by some other object.

Changes made to the original copy will not affect any other copy that makes use of the referenced or stored object. Contrary to the shallow copy, a deep copy makes the execution of a program slower. This is due to the fact that it makes some copies for each object that is called.

17. How can you organize your code to make it easier to change the base class?
Answer: You have to define an alias for the base class, assign the real base class to it before your class definition, and use the alias throughout your class. You can also use this method if you want to decide dynamically (e.g., depending on the availability of resources) which base class to use. 

18. What is a negative index in Python?
Answer: Python sequences are accessible using an index in positive and negative numbers. For example, 0 is the first positive index, 1 is the second positive index and so on. For negative indexes -1 is the last negative index, -2 is the second last negative index and so on.

Index traverses from left to right and increases by one until the end of the list.

Negative index traverse from right to left and iterate one by one till the start of the list. A negative index is used to traverse the elements into reverse order.

19. What is slicing in Python?
Answer: Slicing is a mechanism used to select a range of items from sequence type like list, tuple, and string. It is beneficial and easy to get elements from a range by using slice way. It requires a : (colon) which separates the start and end index of the field. All the data collection types List or tuple allows us to use slicing to fetch elements. Although we can get elements by specifying an index, we get only single element whereas using slicing we can get a group of elements.

20. What is a dictionary in Python?
Answer: The Python dictionary is a built-in data type. It defines a one-to-one relationship between keys and values. Dictionaries contain a pair of keys and their corresponding values. It stores elements in key and value pairs. The keys are unique whereas values can be duplicate. The key accesses the dictionary elements.

21. What are the different file processing modes supported by Python?
Answer: Python provides three modes to open files. The read-only, write-only, read-write and append mode. ‘r’ is used to open a file in read-only mode, ‘w’ is used to open a file in write-only mode, ‘rw’ is used to open in reading and write mode, ‘a’ is used to open a file in append mode. If the mode is not specified, by default file opens in read-only mode. 

22. How to overload constructors or methods in Python?
Answer: Python’s constructor: _init__ () is the first method of a class. Whenever we try to instantiate an object __init__() is automatically invoked by python to initialize members of an object. We can’t overload constructors or methods in Python. It shows an error if we try to overload.

23. What is Python Tuples and how is it different from Lists?
Answer: Tuples is basically a sequence of elements which are separated by commas and are enclosed in parenthesis.

Lists whereas is a sequence of elements which are separated by commas and are enclosed in brackets. Also, Tuples cannot be updated whereas, in lists, elements can be updated along with their sizes.

24. How do you launch sub-processes within the main process of a Python application?
Answer: Python has a built-in module called sub-process. You can import this module and either use run() or Popen() function calls to launch a sub-process and get the control of its return code.

25. How do you implement JSON given that Python is best suited for the server-side application?
Answer: Python has built-in support to handle JSON objects.

You just have to import the JSON module and use the functions such as loads and dumps to convert from JSON string to JSON object and vice versa. It is a straightforward way to handle and exchange JSON based data from the server-side.

26. Can Python be used for web client and web server side programming? And which one is best suited to Python?
Answer: Python is best suited for web server-side application development due to its vast set of features for creating business logic, database interactions, web server hosting, etc.

However, Python can be used as a web client-side application which needs some conversions for a browser to interpret the client-side logic. Also, note that Python can be used to create desktop applications which can run as a standalone application such as utilities for test automation.

27. What should be the typical build environment for Python-based application development?
Answer: You just need to install Python software and using PIP, you can install various Python modules from the open source community.

For IDE, Pycharm is highly recommended for any kind of application development with vast support for plugins. Another basic IDE is called a RIDE and is a part of the Python open source community.

28. Explain the interpretation in Python?
Answer: Programs in python run directly from the source code.

29. What are python and name some key features of it?
Answer: Python is an interpreter-based programming language, interactive and object-oriented scripting language. Python is designed to be highly readable.

It is an interpreter based language which means that, unlike other languages like C and variants, the compilation doesn’t require before running.
It’s dynamically typed, which means you need not to define the datatypes of the declared variables and anything like that.
Eg: You can declare variable x=10 and then x=” Hello World” without error it will define the datatype by default depending on its value.

30. What is the Dictionary?
Answer:

Dictionary objects can be created by using curly braces {} or by calling dictionary function
Dictionary objects are mutable objects
Dictionary represents a key-value base
Each key-value pair of Dictionary is known as an item
Dictionary keys must be immutable
Dictionary values can be mutable or immutable
Duplicate keys are not allowed but values can be duplicate
Insertion order is not preserved
Heterogeneous keys and heterogeneous values are allowed.
30. What Are The Implementation In Python Program?
Answer: Python program can be implemented in two ways

1. Interactive Mode (Submit statement by statement explicitly)
2. Batch Mode (Writing all statements and submit all statements)

In Interactive mode, the python command shell is required. It is available in the installation of python cell.
In Interactive mode is not suitable for developing the projects & Applications
Interactive mode is used for predefined function and programs.

31. How do I test a Python program or component?
Answer: Python comes with two testing frameworks:

The documentation test module finds examples in the documentation strings for a module and runs them, comparing the output with the expected output given in the documentation string.
The unit test modules a fancier testing framework modeled on Java and Smalltalk testing frameworks.

For testing, it helps to write the program so that it may be easily tested by using good modular design. Your program should have almost all functionality encapsulated in either functions or class methods. And this sometimes has the surprising and delightful effect of making the program run faster because local variable accesses are faster than global accesses.

Furthermore, the program should avoid depending on mutating global variables since this makes testing much more difficult to do.
The “global main logic” of your program may be as simple as.

31. How is Python executed?
Answer: Python files are compiled to bytecode. which is then executed by the host.

32. How do you open an already existing file and add content to it?
Answer: In Python, open(,) is used to open a file in different modes. The open function returns a handle to the file, using which one can perform read, write and modify operations.

33. When do you choose a list over a tuple?
Answer: When there is an immutable ordered list of elements we choose tuple. Because we cannot add/remove an element from the tuple. On the other hand, we can add elements to a list using append () or extend() or insert(), etc., and delete elements from a list using remove() or pop().

Simple tuples are immutable, and lists are not. Based on these properties one can decide what to choose in their programming context.

34. What are the generator functions in Python?
Answer: Any function that contains at least one yield statement is called a generator function instead of a return statement. The difference between return and yield is, return statement terminates the function, and yield statement saving all its states pauses and later continues from there on successive calls.

35. How do you invoke the Python interpreter for interactive use?
Answer: python or python.y where x.y is the version of the Python interpreter desired?

36. Why do you need to make your code more readable?
Answer: We need to make our code more readable so that other programmer can understand our code. Basically, for a large project, many programmers work together. So, if the readability of the code is poor, it will be difficult for others to improve the code later.

37. How Python supports encapsulation with respect to functions?
Answer: Python supports inner functions. A function defined inside a function is called an inner function, whose behavior is not hidden. This is how Python supports encapsulation with respect to functions.

38. What is the difference between range() and xrange() functions in Python?
Answer: range() is a function that returns a list of numbers, which will be an overhead if the number is too large. Whereas, xrange() is a generator function that returns an iterator which returns a single generated value whenever it is called.

39. How do you perform pattern matching in Python? Explain?
Answer: Regular Expressions/REs/ regexes enable us to specify expressions that can match specific “parts” of a given string. For instance, we can define a regular expression to match a single character or a digit, a telephone number, or an email address, etc. The Python’s “re” module provides regular expression patterns and was introduce from later versions of Python 2.5. “re” module is providing methods for search text strings, or replacing text strings along with methods for splitting text strings based on the pattern defined.

40. What is the difference between range & xrange? Explain?
Answer: For the most part, xrange and range are the exact same in terms of functionality. They both provide a way to generate a list of integers for you to use, however you please. The only difference is that range returns a Python list object and x range returns an xrange object.

This means that xrange doesn’t actually generate a static list at run-time as the range does. It creates the values as you need them with a special technique called yielding. This technique is used with a type of object known as generators. That means that if you have a really gigantic range you’d like to generate a list for, say one billion, xrange is the function to use.

This is especially true if you have a real memory sensitive system such as a cell phone that you are working with, as the range will use as much memory as it can to create your array of integers, which can result in a Memory Error and crash your program. It’s a memory hungry beast.

41. What is the difference between deep and shallow copy?
Answer: Shallow copy is used when a new instance type gets created and it keeps the values that are copied in the new instance. Shallow copy is used to copy the reference pointers just like it copies the values. These references point to the original objects and the changes made in any member of the class will also affect the original copy of it. Shallow copy allows faster execution of the program and it depends on the size of the data that is used.

Deep copy is used to store the values that are already copied. The deep copy doesn’t copy the reference pointers to the objects. It makes the reference to an object and the new object that is pointed by some other object gets stored. The changes made in the original copy won’t affect any other copy that uses the object. Deep copy makes the execution of the program slower due to making certain copies for each object that is been called.

42. What is the difference between NumPy and SciPy?
Answer: In an ideal world, NumPy would contain nothing but the array data type and the most basic operations: indexing, sorting, reshaping, basic elementwise functions, et cetera.
All numerical code would reside in SciPy. However, one of NumPy’s important goals is compatibility, so NumPy tries to retain all features supported by either of its predecessors.
Thus NumPy contains some linear algebra functions, even though these more properly belong in SciPy. In any case, SciPy contains more fully-featured versions of the linear algebra modules, as well as many other numerical algorithms.
If you are doing scientific computing with python, you should probably install both NumPy and SciPy. Most new features belong in SciPy rather than NumPy.

43. What is the process of compilation and linking in python?
Answer: The compiling and linking allows the new extensions to be compiled properly without any error and the linking can be done only when it passes the compiled procedure. If the dynamic loading is used then it depends on the style that is being provided with the system. The python interpreter can be used to provide the dynamic loading of the configuration setup files and will rebuild the interpreter.

The steps that are required in this as:

Create a file with any name and in any language that is supported by the compiler of your system. For example file.c or file.cpp
Place this file in the Modules/ directory of the distribution which is getting used.
Add a line in the file Setup.local that is present in the Modules/ directory.
Run the file using spam file.o
After successful run of this rebuild the interpreter by using the make command on the top-level directory.
If the file is changed then run rebuildMakefile by using the command as ‘make Makefile’.

44. What is the namespace in Python?
Answer: In Python, every name has a place where it lives. It is known as a namespace. It is like a box where a variable name maps to the object placed. Whenever the variable is searched out, this box will be searched, to get the corresponding object.

45. What are the rules for a local and global variable in Python?
Answer: In Python, variables that are only referenced inside a function are called implicitly global. If a variable is assigned a new value anywhere within the function’s body, it’s assumed to be a local. If a variable is ever assigned a new value inside the function, the variable is implicitly local, and we need to declare it as ‘global’ explicitly. To make a variable globally, we need to declare it by using the global keyword. Local variables are accessible within the local body only. Global variables are accessible anywhere in the program, and any function can access and modify its value.

46. How Python does Compile-time and Run-time code checking?
Answer: In Python, some amount of coding is done at compile-time, but most of the checking such as type, name, etc. are postponed until code execution. Consequently, if the Python code references a user-defined function that does not exist, the code will compile successfully. The Python code will fail only with an exception when the code execution path does not exist.

47. What are the Runtime Errors?
Answer: The errors which occur after starting the execution of the programs are known as runtime errors.
Runtime errors can occur because of

Invalid Input
Invalid Logic
Memory issues
Hardware failures and so on
With respect to every reason which causes to runtime error corresponding runtime error representation class is available

Runtime error representation classes technically we call as an exception class.
While executing the program if any runtime error occurs corresponding runtime error representation class object is created
Creating a runtime error representation class object is technically known as a rising exception
While executing the program if an exception is raised, then internally python interpreter verify any code is implemented to handle the raised exception or not
If a code is not implemented to handle raised exception then the program will be terminated abnormally

48. What is PIP software in the Python world?
Answer: PIP is an acronym for Python Installer Package which provides a seamless interface to install various Python modules. It is a command line tool which can search for packages over the internet and install them without any user interaction.

49. How is Exception Handling done in Python?
Answer: There are 3 main keywords i.e. try, except and finally which are used to catch exceptions and handle the recovering mechanism accordingly. Try is the block of a code which is monitored for errors. Except block gets executed when an error occurs.

The beauty of the final block is to execute the code after trying for error. This block gets executed irrespective of whether an error occurred or not. Finally block is used to do the required cleanup activities of objects/variables.

50. What is an operator in Python?
Answer: An operator is a particular symbol which is used on some values and produces an output as a result. An operator works on operands. Operands are numeric literals or variables which hold some values. Operators can be unary, binary or ternary. An operator which require a single operand known as a unary operator, which require two operands known as a binary operator and which require three operands is called ternary operator.

51. What Is the Biggest Challenge Facing Your Current Job Right Now? What Is Your Biggest Failure?
Answer: This question comes up often regardless of the field because it helps the interviewer get an idea of your approach to problem-solving in your new potential role. The way you approach the answer will make you look awesome, or it will be a red flag. So it will be critical to think about this beforehand and answer the question without delay.

As a rule, don’t complain about the management at your current job or blame the people you’re working with. It’s also not a good idea to pretend like your career has been a walk in the park. Instead, tailor your answer to a project you worked on, but don’t get specific about why the challenge turned out to be difficult in the first place. Instead, concentrate on the problem-solving process to highlight your skills.

When it comes to your biggest failure, it’s critical that you don’t use this time to talk yourself down. If you can’t think of a specific scenario, think of a time when you were disappointed about something that didn’t work out. The primary objective is to show the interviewer how you managed to turn something negative into something positive.
**************************************************************************************************************************************************************
